//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_EcologyRPG/Source/Utility/Input/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""552ae6a7-60c3-4961-bbf8-6767c1638d67"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9da2d89a-71b8-43f8-9362-ad29f5c6048c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pointer"",
                    ""type"": ""PassThrough"",
                    ""id"": ""307a0f50-e530-4e2e-9a0b-d2d0308d7f42"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""694b3dd5-231d-44ac-81b0-2dd638f5d93f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""6743c0fe-e168-4ed0-9588-9e2e9e02fef8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability Slot 1"",
                    ""type"": ""Button"",
                    ""id"": ""3e39e262-085b-484e-a98c-c9a0d3306151"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability Slot 2"",
                    ""type"": ""Button"",
                    ""id"": ""71c924c9-8f86-49e0-a102-5ce44570cd3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability Slot 3"",
                    ""type"": ""Button"",
                    ""id"": ""a028e4c9-d8af-4847-b2a0-5f78b4306947"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability Slot 4"",
                    ""type"": ""Button"",
                    ""id"": ""aa19a886-2a3a-47fb-be06-e7d93c578927"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponAttack"",
                    ""type"": ""Button"",
                    ""id"": ""1edbaee2-38d2-410b-903e-38a86da0bd3c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CharacterMenu"",
                    ""type"": ""Button"",
                    ""id"": ""b92afc99-0d81-4f05-b821-ecb2059d305c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b1a8ecbd-3fa3-41c9-9fe4-27a55276abf2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IngameMenu"",
                    ""type"": ""Button"",
                    ""id"": ""0c16f773-9d86-4051-bd50-cd2d2c2807c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleToxicMode"",
                    ""type"": ""Button"",
                    ""id"": ""55af9065-104d-4669-9cdc-b733dd19e81c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadScripts"",
                    ""type"": ""Button"",
                    ""id"": ""ac203cbf-e200-4097-b393-0299a6cbf68c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""6fda9619-5038-4bae-9db9-0fc1feba0e9a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""762c5504-3250-475c-b6e7-8c6955025828"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1452818c-7ee1-42f6-b95b-23b40b1d6cc2"",
                    ""path"": ""<Keyboard>/#(√Å)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""937c76b8-7bb8-4c8d-a3eb-d7c5cccc40b7"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b1cc32c7-5cf2-474a-95e9-d968fc754626"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c7b7f4a5-feae-41ce-8015-19c49a7c8a7d"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pointer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83301b5e-539d-417d-9a03-091087f62022"",
                    ""path"": ""<Keyboard>/{Modifier}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b92d4d53-0c85-4847-abf5-7f22d6fb5d4d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6970a6dc-a22a-469b-aa72-90e2718642b6"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability Slot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d914869-1440-4b05-a982-9af2f1e0a2f1"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability Slot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1719eda-1d6a-4c0c-8c4b-efdfd34ca531"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability Slot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94d2461c-abf7-4d75-a834-006f937df54b"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability Slot 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7423610d-6a6e-4f5e-b1a5-8a0f9810a773"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c0e3f3f-f5ac-4c95-bbe8-a8427c735f09"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CharacterMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d1bb2a0-3f8c-4ad5-90a0-a2b9bcaa72cb"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e561aa5-ca17-4009-8f32-74499663e59a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IngameMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9081f607-a15a-4706-abbc-9acee436b5db"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleToxicMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93909d76-5d67-4fe7-95c6-1ee43363a977"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadScripts"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InGame
        m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
        m_InGame_Movement = m_InGame.FindAction("Movement", throwIfNotFound: true);
        m_InGame_Pointer = m_InGame.FindAction("Pointer", throwIfNotFound: true);
        m_InGame_Sprint = m_InGame.FindAction("Sprint", throwIfNotFound: true);
        m_InGame_Dodge = m_InGame.FindAction("Dodge", throwIfNotFound: true);
        m_InGame_AbilitySlot1 = m_InGame.FindAction("Ability Slot 1", throwIfNotFound: true);
        m_InGame_AbilitySlot2 = m_InGame.FindAction("Ability Slot 2", throwIfNotFound: true);
        m_InGame_AbilitySlot3 = m_InGame.FindAction("Ability Slot 3", throwIfNotFound: true);
        m_InGame_AbilitySlot4 = m_InGame.FindAction("Ability Slot 4", throwIfNotFound: true);
        m_InGame_WeaponAttack = m_InGame.FindAction("WeaponAttack", throwIfNotFound: true);
        m_InGame_CharacterMenu = m_InGame.FindAction("CharacterMenu", throwIfNotFound: true);
        m_InGame_Interact = m_InGame.FindAction("Interact", throwIfNotFound: true);
        m_InGame_IngameMenu = m_InGame.FindAction("IngameMenu", throwIfNotFound: true);
        m_InGame_ToggleToxicMode = m_InGame.FindAction("ToggleToxicMode", throwIfNotFound: true);
        m_InGame_ReloadScripts = m_InGame.FindAction("ReloadScripts", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGame
    private readonly InputActionMap m_InGame;
    private List<IInGameActions> m_InGameActionsCallbackInterfaces = new List<IInGameActions>();
    private readonly InputAction m_InGame_Movement;
    private readonly InputAction m_InGame_Pointer;
    private readonly InputAction m_InGame_Sprint;
    private readonly InputAction m_InGame_Dodge;
    private readonly InputAction m_InGame_AbilitySlot1;
    private readonly InputAction m_InGame_AbilitySlot2;
    private readonly InputAction m_InGame_AbilitySlot3;
    private readonly InputAction m_InGame_AbilitySlot4;
    private readonly InputAction m_InGame_WeaponAttack;
    private readonly InputAction m_InGame_CharacterMenu;
    private readonly InputAction m_InGame_Interact;
    private readonly InputAction m_InGame_IngameMenu;
    private readonly InputAction m_InGame_ToggleToxicMode;
    private readonly InputAction m_InGame_ReloadScripts;
    public struct InGameActions
    {
        private @PlayerInputs m_Wrapper;
        public InGameActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_InGame_Movement;
        public InputAction @Pointer => m_Wrapper.m_InGame_Pointer;
        public InputAction @Sprint => m_Wrapper.m_InGame_Sprint;
        public InputAction @Dodge => m_Wrapper.m_InGame_Dodge;
        public InputAction @AbilitySlot1 => m_Wrapper.m_InGame_AbilitySlot1;
        public InputAction @AbilitySlot2 => m_Wrapper.m_InGame_AbilitySlot2;
        public InputAction @AbilitySlot3 => m_Wrapper.m_InGame_AbilitySlot3;
        public InputAction @AbilitySlot4 => m_Wrapper.m_InGame_AbilitySlot4;
        public InputAction @WeaponAttack => m_Wrapper.m_InGame_WeaponAttack;
        public InputAction @CharacterMenu => m_Wrapper.m_InGame_CharacterMenu;
        public InputAction @Interact => m_Wrapper.m_InGame_Interact;
        public InputAction @IngameMenu => m_Wrapper.m_InGame_IngameMenu;
        public InputAction @ToggleToxicMode => m_Wrapper.m_InGame_ToggleToxicMode;
        public InputAction @ReloadScripts => m_Wrapper.m_InGame_ReloadScripts;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void AddCallbacks(IInGameActions instance)
        {
            if (instance == null || m_Wrapper.m_InGameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InGameActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Pointer.started += instance.OnPointer;
            @Pointer.performed += instance.OnPointer;
            @Pointer.canceled += instance.OnPointer;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Dodge.started += instance.OnDodge;
            @Dodge.performed += instance.OnDodge;
            @Dodge.canceled += instance.OnDodge;
            @AbilitySlot1.started += instance.OnAbilitySlot1;
            @AbilitySlot1.performed += instance.OnAbilitySlot1;
            @AbilitySlot1.canceled += instance.OnAbilitySlot1;
            @AbilitySlot2.started += instance.OnAbilitySlot2;
            @AbilitySlot2.performed += instance.OnAbilitySlot2;
            @AbilitySlot2.canceled += instance.OnAbilitySlot2;
            @AbilitySlot3.started += instance.OnAbilitySlot3;
            @AbilitySlot3.performed += instance.OnAbilitySlot3;
            @AbilitySlot3.canceled += instance.OnAbilitySlot3;
            @AbilitySlot4.started += instance.OnAbilitySlot4;
            @AbilitySlot4.performed += instance.OnAbilitySlot4;
            @AbilitySlot4.canceled += instance.OnAbilitySlot4;
            @WeaponAttack.started += instance.OnWeaponAttack;
            @WeaponAttack.performed += instance.OnWeaponAttack;
            @WeaponAttack.canceled += instance.OnWeaponAttack;
            @CharacterMenu.started += instance.OnCharacterMenu;
            @CharacterMenu.performed += instance.OnCharacterMenu;
            @CharacterMenu.canceled += instance.OnCharacterMenu;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @IngameMenu.started += instance.OnIngameMenu;
            @IngameMenu.performed += instance.OnIngameMenu;
            @IngameMenu.canceled += instance.OnIngameMenu;
            @ToggleToxicMode.started += instance.OnToggleToxicMode;
            @ToggleToxicMode.performed += instance.OnToggleToxicMode;
            @ToggleToxicMode.canceled += instance.OnToggleToxicMode;
            @ReloadScripts.started += instance.OnReloadScripts;
            @ReloadScripts.performed += instance.OnReloadScripts;
            @ReloadScripts.canceled += instance.OnReloadScripts;
        }

        private void UnregisterCallbacks(IInGameActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Pointer.started -= instance.OnPointer;
            @Pointer.performed -= instance.OnPointer;
            @Pointer.canceled -= instance.OnPointer;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Dodge.started -= instance.OnDodge;
            @Dodge.performed -= instance.OnDodge;
            @Dodge.canceled -= instance.OnDodge;
            @AbilitySlot1.started -= instance.OnAbilitySlot1;
            @AbilitySlot1.performed -= instance.OnAbilitySlot1;
            @AbilitySlot1.canceled -= instance.OnAbilitySlot1;
            @AbilitySlot2.started -= instance.OnAbilitySlot2;
            @AbilitySlot2.performed -= instance.OnAbilitySlot2;
            @AbilitySlot2.canceled -= instance.OnAbilitySlot2;
            @AbilitySlot3.started -= instance.OnAbilitySlot3;
            @AbilitySlot3.performed -= instance.OnAbilitySlot3;
            @AbilitySlot3.canceled -= instance.OnAbilitySlot3;
            @AbilitySlot4.started -= instance.OnAbilitySlot4;
            @AbilitySlot4.performed -= instance.OnAbilitySlot4;
            @AbilitySlot4.canceled -= instance.OnAbilitySlot4;
            @WeaponAttack.started -= instance.OnWeaponAttack;
            @WeaponAttack.performed -= instance.OnWeaponAttack;
            @WeaponAttack.canceled -= instance.OnWeaponAttack;
            @CharacterMenu.started -= instance.OnCharacterMenu;
            @CharacterMenu.performed -= instance.OnCharacterMenu;
            @CharacterMenu.canceled -= instance.OnCharacterMenu;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @IngameMenu.started -= instance.OnIngameMenu;
            @IngameMenu.performed -= instance.OnIngameMenu;
            @IngameMenu.canceled -= instance.OnIngameMenu;
            @ToggleToxicMode.started -= instance.OnToggleToxicMode;
            @ToggleToxicMode.performed -= instance.OnToggleToxicMode;
            @ToggleToxicMode.canceled -= instance.OnToggleToxicMode;
            @ReloadScripts.started -= instance.OnReloadScripts;
            @ReloadScripts.performed -= instance.OnReloadScripts;
            @ReloadScripts.canceled -= instance.OnReloadScripts;
        }

        public void RemoveCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInGameActions instance)
        {
            foreach (var item in m_Wrapper.m_InGameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InGameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InGameActions @InGame => new InGameActions(this);
    public interface IInGameActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnPointer(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnAbilitySlot1(InputAction.CallbackContext context);
        void OnAbilitySlot2(InputAction.CallbackContext context);
        void OnAbilitySlot3(InputAction.CallbackContext context);
        void OnAbilitySlot4(InputAction.CallbackContext context);
        void OnWeaponAttack(InputAction.CallbackContext context);
        void OnCharacterMenu(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnIngameMenu(InputAction.CallbackContext context);
        void OnToggleToxicMode(InputAction.CallbackContext context);
        void OnReloadScripts(InputAction.CallbackContext context);
    }
}
